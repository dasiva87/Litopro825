# Plan de Desarrollo LitoPro 3.0
## Plataforma SaaS para Artes Gráficas en Colombia

### Stack Tecnológico
- **Backend:** Laravel 10.x
- **Frontend:** Filament 3.x
- **Base de Datos:** MySQL 8.0
- **Autenticación:** Laravel Sanctum
- **Cache:** Redis
- **Queue:** Redis
- **File Storage:** Laravel Storage (local/S3)
- **Testing:** PHPUnit + Pest

---

## FASE 1: CONFIGURACIÓN INICIAL DEL PROYECTO (Semana 1)

### 1.1 Configuración del Entorno
- [ ] **Día 1-2: Setup Inicial**
  - Crear repositorio GitHub con estructura de ramas
  - Instalar Laravel 10.x
  - Configurar entorno Docker (opcional)
  - Configurar base de datos MySQL
  - Instalar Filament 3.x
  - Configurar Redis para cache y queues

```bash
# Comandos iniciales
composer create-project laravel/laravel litopro
cd litopro
composer require filament/filament:"^3.0"
php artisan filament:install --panels
```

### 1.2 Configuración Base
- [ ] **Día 3-4: Configuraciones**
  - Configurar variables de entorno
  - Instalar paquetes adicionales (Spatie Permissions, etc.)
  - Configurar timezone y locale para Colombia
  - Setup de logging y debugging

### 1.3 Estructura del Proyecto
- [ ] **Día 5: Organización**
  - Crear estructura de carpetas personalizada
  - Configurar PSR-4 autoloading
  - Setup de Git hooks y CI/CD básico

---

## FASE 2: MIGRACIONES Y MODELOS BASE (Semana 2)

### 2.1 Migraciones Geográficas
- [ ] **Día 1:**
```php
// Orden de ejecución
2024_01_01_000001_create_countries_table.php
2024_01_01_000002_create_states_table.php
2024_01_01_000003_create_cities_table.php
```

### 2.2 Migraciones de Autenticación
- [ ] **Día 2:**
```php
2024_01_01_000004_create_companies_table.php
2024_01_01_000005_create_company_settings_table.php
2024_01_01_000006_modify_users_table.php
2024_01_01_000007_create_permission_tables.php // Spatie
```

### 2.3 Migraciones de Catálogos
- [ ] **Día 3-4:**
```php
2024_01_01_000008_create_measurement_units_table.php
2024_01_01_000009_create_contacts_table.php
2024_01_01_000010_create_ctp_plates_table.php
2024_01_01_000011_create_printing_machines_table.php
2024_01_01_000012_create_papers_table.php
2024_01_01_000013_create_finishing_processes_table.php
2024_01_01_000014_create_products_table.php
```

### 2.4 Migraciones de Documentos
- [ ] **Día 5:**
```php
2024_01_01_000015_create_document_types_table.php
2024_01_01_000016_create_documents_table.php
2024_01_01_000017_create_document_items_table.php
2024_01_01_000018_create_document_item_finishings_table.php
2024_01_01_000019_create_posts_table.php
```

---

## FASE 3: MODELOS Y RELACIONES (Semana 3)

### 3.1 Modelos Base
- [ ] **Día 1-2: Modelos Geográficos y Empresa**
```php
// app/Models/
Country.php
State.php  
City.php
Company.php
CompanySettings.php
User.php (modificado)
```

### 3.2 Modelos de Catálogos
- [ ] **Día 3-4: Modelos de Inventario**
```php
Contact.php
MeasurementUnit.php
CtpPlate.php
PrintingMachine.php
Paper.php
FinishingProcess.php
Product.php
```

### 3.3 Modelos de Documentos
- [ ] **Día 5: Modelos de Negocio**
```php
DocumentType.php
Document.php
DocumentItem.php
DocumentItemFinishing.php
Post.php
```

### 3.4 Traits y Observers
- [ ] **Configurar:**
- MultiTenant trait
- Soft deletes
- UUID traits
- Model observers para auditoría

---

## FASE 4: SEEDERS Y DATOS INICIALES (Semana 4)

### 4.1 Seeders Geográficos
- [ ] **Día 1:**
```php
CountrySeeder.php      // Colombia, US, México
StateSeeder.php        // Departamentos de Colombia
CitySeeder.php         // Principales ciudades
```

### 4.2 Seeders de Sistema
- [ ] **Día 2:**
```php
RoleSeeder.php         // Super Admin, Admin, Manager, Employee
PermissionSeeder.php   // Permisos por módulo
DocumentTypeSeeder.php // Quote, Order, Invoice, etc.
MeasurementUnitSeeder.php // cm, mm, kg, etc.
```

### 4.3 Seeders de Desarrollo
- [ ] **Día 3-4:**
```php
CompanySeeder.php      // Empresas de prueba
UserSeeder.php         // Usuarios de prueba
ContactSeeder.php      // Clientes y proveedores
ProductSeeder.php      // Catálogo básico
```

### 4.4 Factory Classes
- [ ] **Día 5:**
- Crear factories para todos los modelos
- Configurar estados (states) en factories
- Setup de datos faker en español

---

## FASE 5: AUTHENTICATION & AUTHORIZATION (Semana 5)

### 5.1 Configuración de Autenticación
- [ ] **Día 1-2:**
- Configurar multi-tenancy con companies
- Middleware de tenant isolation
- Custom login con validación de empresa
- Password reset personalizado

### 5.2 Sistema de Roles y Permisos
- [ ] **Día 3-4:**
```php
// Middleware
CheckCompanyMiddleware.php
RoleMiddleware.php

// Policies
CompanyPolicy.php
UserPolicy.php
DocumentPolicy.php
```

### 5.3 Guards y Providers
- [ ] **Día 5:**
- Custom user provider para multi-tenancy
- API authentication con Sanctum
- Session management

---

## FASE 6: FILAMENT ADMIN PANEL - MÓDULOS CORE (Semana 6-7)

### 6.1 Configuración de Filament
- [ ] **Día 1:**
```php
// Configurar panel principal
php artisan make:filament-panel admin

// Resources base
php artisan make:filament-resource Company
php artisan make:filament-resource User
```

### 6.2 Gestión de Usuarios y Empresas
- [ ] **Día 2-3:**
- CompanyResource con form completo
- UserResource con roles y permisos
- Dashboard con métricas básicas
- Navigation groups organization

### 6.3 Módulos de Catálogos (CRUD)
- [ ] **Día 4-7:**
```php
// Resources principales
ContactResource.php       // Clientes y Proveedores
PaperResource.php        // Gestión de papeles
PrintingMachineResource.php
CtpPlateResource.php
FinishingProcessResource.php
ProductResource.php
```

#### Características por Resource:
- **Forms:** Validación completa, relaciones dinámicas
- **Tables:** Filtros, búsqueda, export Excel/PDF
- **Actions:** Bulk operations, custom actions
- **Widgets:** Estadísticas por módulo

---

## FASE 7: CALCULADORA DE CORTES (Semana 8)

### 7.1 Lógica de Cálculo
- [ ] **Día 1-2:**
```php
// Services
app/Services/CuttingCalculatorService.php
app/Services/PaperOptimizationService.php

// DTOs
app/DTOs/CuttingCalculationDTO.php
app/DTOs/PaperDimensionsDTO.php
```

### 7.2 API y Frontend
- [ ] **Día 3-4:**
```php
// Controllers
CuttingCalculatorController.php

// Livewire Components  
CuttingCalculatorComponent.php
```

### 7.3 Widget de Filament
- [ ] **Día 5:**
- Widget interactivo en dashboard
- Integración con módulo de cotizaciones
- Visualización canvas con resultado

---

## FASE 8: MÓDULO DE COTIZACIONES (Semana 9-10)

### 8.1 Estructura Base
- [ ] **Día 1-2:**
```php
// Resources
DocumentResource.php
DocumentItemResource.php

// Custom Pages
QuoteBuilder.php
QuotePreview.php
```

### 8.2 Tipos de Items
- [ ] **Día 3-7:**
```php
// Form Components
SimpleItemForm.php       // Volantes, tarjetas, etc.
TalonarioItemForm.php    // Facturas, recibos
MagazineItemForm.php     // Revistas, cuadernos  
DigitalItemForm.php      // Banner, vinilo
CustomItemForm.php       // Personalizado
ProductItemForm.php      // Productos en stock
```

### 8.3 Cálculos y Pricing
- [ ] **Día 8-10:**
```php
// Services
QuotePricingService.php
MaterialCalculatorService.php
ProfitMarginService.php

// Jobs
GenerateQuotePDFJob.php
SendQuoteEmailJob.php
```

---

## FASE 9: ÓRDENES DE PRODUCCIÓN (Semana 11)

### 9.1 Flujo de Órdenes
- [ ] **Día 1-3:**
```php
// Models & Resources
ProductionOrder.php
ProductionOrderResource.php

// Workflow
QuoteToOrderTransformer.php
OrderStatusManager.php
```

### 9.2 Asignación y Tracking
- [ ] **Día 4-5:**
- Asignación de operarios
- Timeline de producción
- Status tracking en tiempo real
- Notificaciones automáticas

---

## FASE 10: PEDIDOS DE PAPEL (Semana 12)

### 10.1 Gestión de Pedidos
- [ ] **Día 1-3:**
```php
PaperOrderResource.php
PaperOrderCalculatorService.php
SupplierIntegrationService.php
```

### 10.2 Automatización
- [ ] **Día 4-5:**
- Auto-generación desde cotizaciones
- Verificación de stock en proveedores
- Órdenes de compra automáticas

---

## FASE 11: RED SOCIAL Y COMUNICACIÓN (Semana 13-14)

### 11.1 Sistema de Posts
- [ ] **Día 1-3:**
```php
// Models
Post.php
Comment.php
Like.php
Follow.php

// Resources
PostResource.php
SocialDashboard.php
```

### 11.2 Interacciones Sociales
- [ ] **Día 4-7:**
- Sistema de seguimiento
- Comments y likes
- Feed personalizado
- Moderación de contenido

### 11.3 Chat en Tiempo Real
- [ ] **Día 8-10:**
```php
// Livewire Components
ChatComponent.php
NotificationComponent.php

// Broadcasting
MessageSent.php (Event)
NotificationSent.php (Event)
```

---

## FASE 12: NOTIFICACIONES Y COMUNICACIÓN (Semana 15)

### 12.1 Sistema de Notificaciones
- [ ] **Día 1-3:**
```php
// Notifications
QuoteApprovedNotification.php
OrderStatusNotification.php
PaperStockLowNotification.php

// Channels
WhatsAppChannel.php
SMSChannel.php
```

### 12.2 Integraciones Externas
- [ ] **Día 4-5:**
- Integración WhatsApp Business API
- Twilio para SMS
- SendGrid para emails masivos

---

## FASE 13: TESTING Y CALIDAD (Semana 16-17)

### 13.1 Unit Tests
- [ ] **Día 1-4:**
```php
// Tests principales
Feature/Auth/LoginTest.php
Feature/Quote/CreateQuoteTest.php
Feature/Calculator/CuttingCalculatorTest.php
Unit/Services/PricingServiceTest.php
```

### 13.2 Integration Tests
- [ ] **Día 5-7:**
- API endpoint testing
- Database transaction testing
- File upload testing
- Email/notification testing

### 13.3 Performance Testing
- [ ] **Día 8-10:**
- Load testing con Artillery
- Database query optimization
- Caching strategies
- Memory usage optimization

---

## FASE 14: DEPLOYMENT Y DevOps (Semana 18)

### 14.1 Configuración de Producción
- [ ] **Día 1-3:**
- Docker containerization
- CI/CD con GitHub Actions
- Environment configurations
- Database backup strategies

### 14.2 Monitoring y Logging
- [ ] **Día 4-5:**
- Application monitoring
- Error tracking con Sentry
- Performance monitoring
- Log aggregation

---

## FASE 15: DOCUMENTACIÓN Y CAPACITACIÓN (Semana 19)

### 15.1 Documentación Técnica
- [ ] **Día 1-3:**
- API documentation con Swagger
- Code documentation
- Database schema documentation
- Deployment guide

### 15.2 Documentación de Usuario
- [ ] **Día 4-5:**
- User manual
- Video tutorials
- FAQ section
- Training materials

---

## ESTRUCTURA DE BRANCHES EN GIT

```
main
├── develop
├── feature/auth-system
├── feature/quotation-module
├── feature/cutting-calculator
├── feature/social-network
├── feature/production-orders
├── feature/paper-orders
├── hotfix/critical-fixes
└── release/v1.0.0
```

## DIAGRAMA DE ACTIVIDADES DEL DESARROLLO

```mermaid
graph TD
    A[Setup Inicial] --> B[Migraciones]
    B --> C[Modelos y Relaciones]
    C --> D[Seeders]
    D --> E[Auth & Authorization]
    E --> F[Filament Admin]
    F --> G[Calculadora de Cortes]
    G --> H[Módulo Cotizaciones]
    H --> I[Órdenes de Producción]
    I --> J[Pedidos de Papel]
    J --> K[Red Social]
    K --> L[Notificaciones]
    L --> M[Testing]
    M --> N[Deployment]
    N --> O[Documentación]
    
    style A fill:#e1f5fe
    style F fill:#f3e5f5
    style H fill:#e8f5e8
    style K fill:#fff3e0
    style M fill:#fce4ec
```

## CRONOGRAMA DETALLADO

| Semana | Fase | Entregables | Responsable |
|--------|------|-------------|-------------|
| 1 | Setup | Proyecto configurado, repo GitHub | DevOps/Lead |
| 2 | DB Schema | Migraciones completas | Backend Dev |
| 3 | Models | Modelos con relaciones | Backend Dev |
| 4 | Data | Seeders y factories | Backend Dev |
| 5 | Auth | Sistema autenticación | Backend Dev |
| 6-7 | Admin CRUD | Panel administrativo | Full Stack |
| 8 | Calculator | Calculadora funcional | Frontend/Backend |
| 9-10 | Quotes | Módulo cotizaciones | Full Stack |
| 11 | Production | Órdenes de producción | Backend Dev |
| 12 | Paper Orders | Pedidos de papel | Backend Dev |
| 13-14 | Social | Red social y chat | Full Stack |
| 15 | Notifications | Sistema notificaciones | Backend Dev |
| 16-17 | Testing | Suite de pruebas | QA/Dev Team |
| 18 | Deploy | Producción lista | DevOps |
| 19 | Docs | Documentación completa | Tech Writer/Dev |

## COMANDOS ARTISAN IMPORTANTES

```bash
# Generar recursos de Filament
php artisan make:filament-resource ModelName --generate

# Migraciones
php artisan make:migration create_table_name --create=table_name

# Modelos con todo
php artisan make:model ModelName -mfsc

# Jobs para procesamiento
php artisan make:job ProcessQuoteCalculation

# Notifications
php artisan make:notification QuoteApproved

# Tests
php artisan make:test Feature/QuoteTest
php artisan make:test Unit/CalculatorTest --unit

# Caché y optimización  
php artisan optimize
php artisan config:cache
php artisan route:cache
php artisan view:cache
```

## MÉTRICAS DE ÉXITO

### Técnicas:
- 90%+ cobertura de tests
- < 200ms tiempo de respuesta promedio
- 99.9% uptime
- 0 vulnerabilidades críticas

### Funcionales:
- 100% de módulos implementados según spec
- Calculadora de cortes precisa
- Sistema multi-tenant funcional
- Chat en tiempo real operativo

### Negocio:
- 50+ empresas registradas en primer mes
- 1000+ cotizaciones generadas
- 80%+ satisfacción de usuarios
- < 5% tasa de churn mensual